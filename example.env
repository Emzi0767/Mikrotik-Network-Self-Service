# Disable sensitive logging and set up a reasonable BCrypt work factor
NSS2__LOGSENSITIVE=false
NSS2__BCRYPTFACTOR=10

# HTTP configuration
NSS2__HTTP__ENDPOINTS__0__ENABLETLS=false
NSS2__HTTP__ENDPOINTS__0__MUTUALTLS=false
# NSS2__HTTP__ENDPOINTS__0__CACERTITFICATE=<file path>
# NSS2__HTTP__ENDPOINTS__0__SERVERCERTIFICATE=<file path>
# NSS2__HTTP__ENDPOINTS__0__SERVERKEY=<file path>
# NSS2__HTTP__ENDPOINTS__0__SERVERKEYPASSWORD=<base64 of password, if key encrypted>
# Can specify more, by using more indexes

# JWT settings
NSS2__AUTHENTICATION__SYMMETRICKEY=<fill in base64 bytes here>
NSS2__AUTHENTICATION__ALGORITHM=HS256
NSS2__AUTHENTICATION__ISSUER=nss2-dev
NSS2__AUTHENTICATION__AUDIENCE=nss2-dev
NSS2__AUTHENTICATION__EXPIRATIONSECONDS=300
NSS2__AUTHENTICATION__REFRESHEXPIRATIONSECONDS=43200
NSS2__AUTHENTICATION__REMEMBEREXPIRATIONSECONDS=7257600

# PostgreSQL settings
NSS2__POSTGRES__HOSTNAME=localhost
NSS2__POSTGRES__PORT=5432
NSS2__POSTGRES__DATABASE=nss2
NSS2__POSTGRES__USERNAME=nss2
NSS2__POSTGRES__PASSWORD=hunter2
NSS2__POSTGRES__ENABLETLS=false
# NSS2__POSTGRES__MUTUALTLS=false
# NSS2__POSTGRES__CACERTIFICATE=<path to file>
# NSS2__POSTGRES__CLIENTCERTIFICATE=<path to file>
# NSS2__POSTGRES__CLIENTKEY=<path to file>
# NSS2__POSTGRES__CLIENTKEYPASSWORD=<base64 of password, if key encrypted>

# Mikrotik settings
NSS2__MIKROTIK__HOSTNAME=demo.mt.lv
NSS2__MIKROTIK__PORT=8728
NSS2__MIKROTIK__USERNAME=admin
NSS2__MIKROTIK__PASSWORD=
NSS2__MIKROTIK__ENABLETLS=false
NSS2__MIKROTIK__ALLOWOBSOLETETLSVERSIONS=false
NSS2__MIKROTIK__ENABLEIPV4=true
NSS2__MIKROTIK__ENABLEIPV6=false
# NSS2__MIKROTIK__SIGNALRANGELOW=-60
# NSS2__MIKROTIK__SIGNALRANGEHIGH=120
