syntax = "proto3";

option csharp_namespace = "Emzi0767.NetworkSelfService.gRPC";

package authentication;

import "google/protobuf/timestamp.proto";
import "google/protobuf/empty.proto";
import "result.proto";

// Represents an attempt to authenticate.
message AuthenticationRequest {
    // Gets or sets the password to authenticate with.
    string username = 1;

    // Gets or sets the password to authenticate with.
    string password = 2;

    // Gets whether to use a long session or not.
    bool rememberMe = 3;
}

// Represents an authentication response.
message AuthenticationResponse {
    message AuthenticationSuccess {
        // Gets or sets the authentication token to send along all requests.
        string token = 1;

        // Gets or sets the token used to refresh the authentication token.
        optional string refresh = 2;

        // Gets or sets the timestamp at which the authentication token will expire.
        optional google.protobuf.Timestamp expiresAt = 3;

        // Gets or sets the timestamp at which the refresh token (and thus, the session), will expire.
        optional google.protobuf.Timestamp refreshBy = 4;
    };

    // Gets or sets the session that resulted from the authentication attempt, if applicable.
    optional AuthenticationSuccess session = 1;
}

// Represents a request to change password.
message PasswordUpdateRequest {
    // Gets or sets the current password.
    string currentPassword = 1;

    // Gets or sets the new password.
    string newPassword = 2;

    // Gets or sets the confirmation for the new password.
    string confirmPassword = 3;
}

// Provides methods for creating, extending, and destroying sessions.
service Authentication {
    // Attempts to authenticate using provided credentials.
    rpc Authenticate(AuthenticationRequest) returns (result.Result);

    // Attempts to refresh a session using provided refresh token.
    rpc RefreshSession(google.protobuf.Empty) returns (result.Result);

    // Attempts to destroy a session and log out a user.
    rpc DestroySession(google.protobuf.Empty) returns (result.Result);

    // Attempts to update the current user's password.
    rpc ChangePassword(PasswordUpdateRequest) returns (result.Result);
}
